# Default values for greye.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 3
image:
  repository: "ftrigari/greye"
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: "latest"

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Automatically mount a ServiceAccount's API credentials?
  automount: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}
podLabels: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 8080
  targetPort: 8080


resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

livenessProbe:
  httpGet:
    path: /api/v1/application/monitor
    port: 8080
    periodSeconds: 5
    failureThreshold: 30
    timeoutSeconds: 1


readinessProbe:
  httpGet:
    path: /api/v1/application/monitor
    port: 8080
    periodSeconds: 5
    failureThreshold: 30
    timeoutSeconds: 1

startupProbe:
  httpGet:
    path: /api/v1/application/monitor
    port: 8080
    periodSeconds: 2
    failureThreshold: 60
    timeoutSeconds: 1


# Additional volumes on the output Deployment definition.
volumes: []
# - name: foo
#   secret:
#     secretName: mysecret
#     optional: false

# Additional volumeMounts on the output Deployment definition.
volumeMounts: []
# - name: foo
#   mountPath: "/etc/foo"
#   readOnly: true

nodeSelector: {}

tolerations: []

affinity: {}

notification: {}
#  telegram:
#    destination: "<your-destination>"
#    token: "<your-token>"

protocol: []

application:
  authentication:
    - "basicAuth"
  intervalSeconds: 30
  timeoutSeconds: 5
  protocol: "http"
  method: "GET"
  headers: "{}"
  body: "{}"
  port: 80
  maxFailedRequests: 3

cluster:
  intervalSeconds: 60
  timeoutSeconds: 5
  maxFailedRequests: 3
  myIp:
  ip: []

server:
  logLevel: "info"

monitoring:
    enabled: true
